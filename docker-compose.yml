version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: kontrolla-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-12435687}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-kontrollapro}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./Backend/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./Backend/src/database/seed.js:/docker-entrypoint-initdb.d/02-seed.js
    networks:
      - kontrolla-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend Node.js
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: kontrolla-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: kontrollapro_prod
      DB_USER: kontrollapro
      DB_PASSWORD: KontrollaProd2024@DB!
      JWT_SECRET: KontrollaPro_VPS_JWT_Ultra_Secure_Key_2024_Production_nx8wQ2vR9pL3mK7jF5tY
      CLOUDINARY_CLOUD_NAME: dko7s3u3j
      CLOUDINARY_API_KEY: 754366869343179
      CLOUDINARY_API_SECRET: 1uMokyb2NhuzefxNt1ocJm3yfAU
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: kontrollapro@gmail.com
      EMAIL_PASS: kbuz yhdu hdku htaq
    ports:
      - "3000:3000"
    volumes:
      - ./Backend/uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - kontrolla-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: kontrolla-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - kontrolla-network

  # Redis para cache e sess√µes (opcional)
  redis:
    image: redis:7-alpine
    container_name: kontrolla-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kontrolla-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  kontrolla-network:
    driver: bridge
