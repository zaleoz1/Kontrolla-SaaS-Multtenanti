# =========================================================================
# KONTROLLAPRO - DOCKER COMPOSE SIMPLES (SEM VOLUMES PERSISTENTES)
# =========================================================================
# Use este arquivo em caso de problemas com volumes persistentes
# Comando: docker compose -f docker-compose.simple.yml up -d --build

version: '3.8'

services:
  # =====================================================
  # MYSQL - BANCO DE DADOS
  # =====================================================
  mysql:
    image: mysql:8.0
    container_name: kontrolla-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./Backend/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - kontrolla-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --max-connections=100
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s

  # =====================================================
  # REDIS - CACHE E SESSÃ•ES
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: kontrolla-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - kontrolla-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =====================================================
  # BACKEND - API NODE.JS
  # =====================================================
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: kontrolla-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kontrolla-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =====================================================
  # NGINX - PROXY REVERSO
  # =====================================================
  nginx:
    image: nginx:alpine
    container_name: kontrolla-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./Frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - kontrolla-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# =========================================================================
# NETWORKS
# =========================================================================
networks:
  kontrolla-network:
    driver: bridge